{"remainingRequest":"/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/src/views/Dashboard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/src/views/Dashboard.vue","mtime":1606461132561},{"path":"/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/carcareProject/fron-end/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-table .cell {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsSA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n      <b-row>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total income in this year\"\n            type=\"gradient-info\"\n            sub-title=\"49,65%\"\n            icon=\"ni ni-chart-bar-32\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <!-- <span class=\"text-success mr-2\">54.8%</span>\n              <span class=\"text-nowrap\">Since last month</span> -->\n            </template>\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total income in this month\"\n            type=\"gradient-red\"\n            sub-title=\"350,897\"\n            icon=\"ni ni-active-40\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <!-- <span class=\"text-success mr-2\">3.48%</span>\n              <span class=\"text-nowrap\">Total income in this month</span> -->\n            </template>\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total income in last 7 days\"\n            type=\"gradient-orange\"\n            :sub-title=\"String(numberWithCommas(seven_day_total)) + ' BTH'\"\n            icon=\"ni ni-chart-pie-35\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <!-- <span class=\"text-success mr-2\">12.18%</span>\n              <span class=\"text-nowrap\">Total income in last 7 days</span> -->\n            </template>\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Current income in this day\"\n            type=\"gradient-green\"\n            :sub-title=\"String(numberWithCommas(day_total)) + ' BTH'\"\n            icon=\"ni ni-money-coins\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <!-- <span class=\"text-danger mr-2\">5.72%</span>\n              <span class=\"text-nowrap\">Since last month</span> -->\n            </template>\n          </stats-card>\n        </b-col>\n      </b-row>\n    </base-header>\n\n    <!--Charts-->\n    <b-container fluid class=\"mt--7\">\n      <b-row>\n        <b-col xl=\"8\" class=\"mb-5 mb-xl-0\">\n          <card type=\"default\" header-classes=\"bg-transparent\">\n            <b-row align-v=\"center\" slot=\"header\">\n              <b-col>\n                <h6 class=\"text-light text-uppercase ls-1 mb-1\">Overview</h6>\n                <h5 class=\"h3 text-white mb-0\">Sales value</h5>\n              </b-col>\n              <b-col>\n                <b-nav class=\"nav-pills justify-content-end\">\n                  <b-nav-item\n                    class=\"mr-2 mr-md-0\"\n                    :active=\"bigLineChart.activeIndex === 0\"\n                    link-classes=\"py-2 px-3\"\n                    @click.prevent=\"initBigChart(0)\"\n                  >\n                    <span class=\"d-none d-md-block\">Month</span>\n                    <span class=\"d-md-none\">M</span>\n                  </b-nav-item>\n                  <b-nav-item\n                    link-classes=\"py-2 px-3\"\n                    :active=\"bigLineChart.activeIndex === 1\"\n                    @click.prevent=\"initBigChart(1)\"\n                  >\n                    <span class=\"d-none d-md-block\">Week</span>\n                    <span class=\"d-md-none\">W</span>\n                  </b-nav-item>\n                </b-nav>\n              </b-col>\n            </b-row>\n            <line-chart\n              :height=\"350\"\n              ref=\"bigChart\"\n              :chart-data=\"bigLineChart.chartData\"\n              :extra-options=\"bigLineChart.extraOptions\"\n            >\n            </line-chart>\n          </card>\n        </b-col>\n\n        <b-col xl=\"4\" class=\"mb-5 mb-xl-0\">\n          <card header-classes=\"bg-transparent\">\n            <b-row align-v=\"center\" slot=\"header\">\n              <b-col>\n                <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6>\n                <h5 class=\"h3 mb-0\">Total orders</h5>\n              </b-col>\n            </b-row>\n\n            <bar-chart\n              :height=\"350\"\n              ref=\"barChart\"\n              :chart-data=\"redBarChart.chartData\"\n            >\n            </bar-chart>\n          </card>\n        </b-col>\n      </b-row>\n      <!-- End charts-->\n\n      <!--Tables-->\n      <b-row class=\"mt-5\">\n        <b-col xl=\"8\" class=\"mb-5 mb-xl-0\">\n          <page-visits-table></page-visits-table>\n        </b-col>\n        <b-col xl=\"4\" class=\"mb-5 mb-xl-0\">\n          <social-traffic-table></social-traffic-table>\n        </b-col>\n      </b-row>\n      <!--End tables-->\n    </b-container>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport moment from \"moment\";\n// Charts\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\n\n// Components\nimport BaseProgress from \"@/components/BaseProgress\";\nimport StatsCard from \"@/components/Cards/StatsCard\";\n\n// Tables\nimport SocialTrafficTable from \"./Dashboard/SocialTrafficTable\";\nimport PageVisitsTable from \"./Dashboard/PageVisitsTable\";\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    BaseProgress,\n    StatsCard,\n    PageVisitsTable,\n    SocialTrafficTable\n  },\n  data() {\n    return {\n      SERVER_URL: \"http://192.168.1.72:3000\",\n      day_total: 0,\n      seven_day_total: 0,\n      bigLineChart: {\n        allData: [\n          [0, 20, 10, 30, 15, 40, 20, 60, 60],\n          [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        ],\n        activeIndex: 0,\n        chartData: {\n          datasets: [\n            {\n              label: \"Performance\",\n              data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n            }\n          ],\n          labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        extraOptions: chartConfigs.blueChartOptions\n      },\n      redBarChart: {\n        chartData: {\n          labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          datasets: [\n            {\n              label: \"Sales\",\n              data: [25, 20, 30, 22, 17, 29]\n            }\n          ]\n        },\n        extraOptions: chartConfigs.blueChartOptions\n      }\n    };\n  },\n  methods: {\n    initBigChart(index) {\n      let chartData = {\n        datasets: [\n          {\n            label: \"Performance\",\n            data: this.bigLineChart.allData[index]\n          }\n        ],\n        labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n      };\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = index;\n    },\n    numberWithCommas(x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n    async getTotalIncome_day() {\n      var m = moment();\n      m.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n      let date = moment(m).format(\"YYYY-MM-DD HH:mm:ss\");\n      await axios\n        .get(\n          `${this.SERVER_URL}/getTotalIncomeInDay?site=Chantaburi-1&sdate=${date}`\n        )\n        .then(response => {\n          console.log(response);\n          this.day_total = 0;\n          if (response.data.length > 0) {\n            for (let transection of response.data) {\n              this.day_total += transection.insertedCredit;\n            }\n            console.log(\"this day: \", this.day_total);\n          }\n        })\n        .catch(e => {\n          console.log(\"ERROR |\", e);\n        });\n    },\n    async getTotalIncome_last_7_days() {\n      var m = moment();\n      m = m.subtract(7, \"days\");\n      m.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n      let date = moment(m).format(\"YYYY-MM-DD HH:mm:ss\");\n      await axios\n        .get(\n          `${this.SERVER_URL}/getTotalIncomeInDay?site=Chantaburi-1&sdate=${date}`\n        )\n        .then(response => {\n          console.log(response);\n          this.seven_day_total = 0;\n          if (response.data.length > 0) {\n            for (let transection of response.data) {\n              this.seven_day_total += transection.insertedCredit;\n            }\n            console.log(\"seven_day_total : \", this.seven_day_total);\n          }\n        })\n        .catch(e => {\n          console.log(\"ERROR |\", e);\n        });\n    },\n    async getTotalIncome_month() {\n      const startOfMonth = moment().startOf('month').format(\"YYYY-MM-DD HH:mm:ss\");\n      await axios\n        .get(\n          `${this.SERVER_URL}/getTotalIncomeInDay?site=Chantaburi-1&sdate=${startOfMonth}`\n        )\n        .then(response => {\n          console.log(response);\n          this.day_total = 0;\n          if (response.data.length > 0) {\n            for (let transection of response.data) {\n              this.day_total += transection.insertedCredit;\n            }\n            console.log(\"this day: \", this.day_total);\n          }\n        })\n        .catch(e => {\n          console.log(\"ERROR |\", e);\n        });\n    },\n  },\n  mounted() {\n    this.initBigChart(0);\n  },\n  async created() {\n    await this.getTotalIncome_day();\n    await this.getTotalIncome_month();\n    await this.getTotalIncome_last_7_days();\n  }\n};\n</script>\n<style>\n.el-table .cell {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n</style>\n"]}]}