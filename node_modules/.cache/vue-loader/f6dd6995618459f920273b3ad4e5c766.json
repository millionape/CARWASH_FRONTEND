{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\BaseDropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\BaseDropdown.vue","mtime":1607769978112},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'base-dropdown',\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'div',\r\n      description: 'Dropdown html tag (e.g div, ul etc)'\r\n    },\r\n    titleTag: {\r\n      type: String,\r\n      default: 'button',\r\n      description: 'Dropdown title (toggle) html tag'\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: 'Dropdown title'\r\n    },\r\n    direction: {\r\n      type: String,\r\n      default: 'down', // up | down\r\n      description: 'Dropdown menu direction (up|down)'\r\n    },\r\n    icon: {\r\n      type: String,\r\n      description: 'Dropdown icon'\r\n    },\r\n    titleClasses: {\r\n      type: [String, Object, Array],\r\n      description: 'Title css classes'\r\n    },\r\n    menuClasses: {\r\n      type: [String, Object],\r\n      description: 'Menu css classes'\r\n    },\r\n    menuOnRight: {\r\n      type: Boolean,\r\n      description: 'Whether menu should appear on the right'\r\n    },\r\n    hasToggle: {\r\n      type: Boolean,\r\n      description: 'Whether dropdown has arrow icon shown',\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      this.isOpen = !this.isOpen;\r\n      this.$emit('change', this.isOpen);\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n      this.$emit('change', false);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["BaseDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseDropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <component\r\n    :is=\"tag\"\r\n    :class=\"[{ show: isOpen }, `drop${direction}`]\"\r\n    @click=\"toggleDropDown\"\r\n    v-click-outside=\"closeDropDown\"\r\n  >\r\n    <slot name=\"title-container\" :is-open=\"isOpen\">\r\n      <component\r\n        :is=\"titleTag\"\r\n        class=\"btn-rotate\"\r\n        :class=\"[{'dropdown-toggle': hasToggle}, titleClasses]\"\r\n        :aria-expanded=\"isOpen\"\r\n        data-toggle=\"dropdown\"\r\n      >\r\n        <slot name=\"title\" :is-open=\"isOpen\">\r\n          <i :class=\"icon\"></i> {{ title }}\r\n        </slot>\r\n      </component>\r\n    </slot>\r\n    <ul\r\n      class=\"dropdown-menu\"\r\n      :class=\"[\r\n        { show: isOpen },\r\n        { 'dropdown-menu-right': menuOnRight },\r\n        menuClasses\r\n      ]\"\r\n    >\r\n      <slot></slot>\r\n    </ul>\r\n  </component>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'base-dropdown',\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'div',\r\n      description: 'Dropdown html tag (e.g div, ul etc)'\r\n    },\r\n    titleTag: {\r\n      type: String,\r\n      default: 'button',\r\n      description: 'Dropdown title (toggle) html tag'\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: 'Dropdown title'\r\n    },\r\n    direction: {\r\n      type: String,\r\n      default: 'down', // up | down\r\n      description: 'Dropdown menu direction (up|down)'\r\n    },\r\n    icon: {\r\n      type: String,\r\n      description: 'Dropdown icon'\r\n    },\r\n    titleClasses: {\r\n      type: [String, Object, Array],\r\n      description: 'Title css classes'\r\n    },\r\n    menuClasses: {\r\n      type: [String, Object],\r\n      description: 'Menu css classes'\r\n    },\r\n    menuOnRight: {\r\n      type: Boolean,\r\n      description: 'Whether menu should appear on the right'\r\n    },\r\n    hasToggle: {\r\n      type: Boolean,\r\n      description: 'Whether dropdown has arrow icon shown',\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      this.isOpen = !this.isOpen;\r\n      this.$emit('change', this.isOpen);\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n      this.$emit('change', false);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.dropdown {\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n</style>\r\n"]}]}