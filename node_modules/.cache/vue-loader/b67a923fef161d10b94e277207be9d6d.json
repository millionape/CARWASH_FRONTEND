{"remainingRequest":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/src/views/DeviceInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/src/views/DeviceInfo.vue","mtime":1607343894342},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/cache-loader/dist/cjs.js","mtime":1606987769885},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/babel-loader/lib/index.js","mtime":1606987769374},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/cache-loader/dist/cjs.js","mtime":1606987769885},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/vue-loader/lib/index.js","mtime":1606987774990}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { SERVER_PARAMS } from \"../environment/environment\";\n\nexport default {\n  name: \"icons\",\n  props: {\n    deviceId: String,\n  },\n  data() {\n    return {\n      deviceMode: null,\n      deviceCurrentCredit: null,\n      deviceLastInsertCredit: null,\n      deviceLastInsertDate: null,\n      deviceUpdatedDate: null,\n      deviceList: [],\n      polling: null,\n      SERVER_URL: SERVER_PARAMS.URL,\n      columns: [\n        {\n          label: \"Updated Date\",\n          field: \"updatedDate\",\n        },\n        {\n          label: \"Device Id\",\n          field: \"deviceId\",\n        },\n        {\n          label: \"Mode\",\n          field: \"onMode\",\n        },\n        {\n          label: \"Credit\",\n          field: \"currentCredit\",\n        },\n        {\n          label: \"Inserted Credit\",\n          field: \"insertedCredit\",\n        },\n      ],\n      rows: [],\n    };\n  },\n  methods: {\n    pollData() {\n      this.polling = setInterval(() => {\n        this.getCurrentStates();\n      }, 2000);\n    },\n    async getCurrentStates() {\n      await axios\n        .get(`${this.SERVER_URL}/getDeviceCurrentStatus?deviceId=${this.deviceId}`)\n        .then((response) => {\n          console.log(\"DEVICES info \", response);\n          let data = response.data[0];\n          this.deviceMode = data.onMode;\n          this.deviceCurrentCredit = data.currentCredit;\n          this.deviceLastInsertCredit = data.lastInsertCredit;\n          this.deviceLastInsertDate = data.lastInsertDate;\n          this.deviceUpdatedDate = data.updatedDate;\n        })\n        .catch((e) => {\n          console.log(\"ERROR |\", e);\n        });\n    },\n    async getHistory(deviceId) {\n      let loader = this.$loading.show({\n        // Optional parameters\n        color: \"blue\",\n        canCancel: true,\n      });\n      var sdate = moment()\n        .subtract(7, \"days\")\n        .format(\"YYYY-MM-DD HH:mm:ss\");\n      var edate = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      await axios\n        .get(\n          `${this.SERVER_URL}/getTransectionByDeviceId?deviceId=${deviceId}&sdate=${sdate}&edate=${edate}&limit=2000`\n        )\n        .then((response) => {\n          console.log(\"HISTORY lIST \", response);\n          this.rows = response.data;\n          loader.hide();\n        })\n        .catch((e) => {\n          console.log(\"ERROR |\", e);\n          loader.hide();\n        });\n    },\n  },\n   beforeDestroy() {\n    clearInterval(this.polling);\n  },\n  \n  created() {\n    this.getHistory(this.deviceId);\n    this.pollData();\n  },\n};\n",{"version":3,"sources":["DeviceInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"DeviceInfo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"mt-3\">\n    <card header-classes=\"bg-transparent mt-3\">\n      <h3 class=\"mb-0\">Current state</h3>\n      <b-row class=\"mt-3\">\n        <b-col>\n          <stats-card\n            title=\"Current Credit\"\n            type=\"gradient-info\"\n            :sub-title=\"deviceCurrentCredit\"\n          >\n          </stats-card>\n        </b-col>\n        <b-col>\n          <stats-card\n            title=\"Current Mode\"\n            type=\"gradient-info\"\n            :sub-title=\"deviceMode\"\n          >\n          </stats-card>\n        </b-col>\n        <b-col>\n          <stats-card\n            title=\"Last Inserted Credit\"\n            type=\"gradient-info\"\n            :sub-title=\"deviceLastInsertCredit\"\n          >\n          </stats-card>\n        </b-col>\n        <b-col>\n          <stats-card\n            title=\"Last Inserted Date\"\n            type=\"gradient-info\"\n            :sub-title=\"deviceLastInsertDate\"\n          >\n          </stats-card>\n        </b-col>\n        <b-col>\n          <stats-card\n            title=\"Last Update\"\n            type=\"gradient-info\"\n            :sub-title=\"deviceUpdatedDate\"\n          >\n          </stats-card>\n        </b-col>\n      </b-row>\n    </card>\n    <br />\n    <card header-classes=\"bg-transparent\">\n      <h3 slot=\"header\" class=\"mb-0\">Event List</h3>\n      <vue-good-table\n        :columns=\"columns\"\n        :rows=\"rows\"\n        :pagination-options=\"{\n          enabled: true,\n          mode: 'pages',\n          perPage: 10,\n          perPageDropdown: [50, 100, 300, 1000],\n        }\"\n      />\n    </card>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { SERVER_PARAMS } from \"../environment/environment\";\n\nexport default {\n  name: \"icons\",\n  props: {\n    deviceId: String,\n  },\n  data() {\n    return {\n      deviceMode: null,\n      deviceCurrentCredit: null,\n      deviceLastInsertCredit: null,\n      deviceLastInsertDate: null,\n      deviceUpdatedDate: null,\n      deviceList: [],\n      polling: null,\n      SERVER_URL: SERVER_PARAMS.URL,\n      columns: [\n        {\n          label: \"Updated Date\",\n          field: \"updatedDate\",\n        },\n        {\n          label: \"Device Id\",\n          field: \"deviceId\",\n        },\n        {\n          label: \"Mode\",\n          field: \"onMode\",\n        },\n        {\n          label: \"Credit\",\n          field: \"currentCredit\",\n        },\n        {\n          label: \"Inserted Credit\",\n          field: \"insertedCredit\",\n        },\n      ],\n      rows: [],\n    };\n  },\n  methods: {\n    pollData() {\n      this.polling = setInterval(() => {\n        this.getCurrentStates();\n      }, 2000);\n    },\n    async getCurrentStates() {\n      await axios\n        .get(`${this.SERVER_URL}/getDeviceCurrentStatus?deviceId=${this.deviceId}`)\n        .then((response) => {\n          console.log(\"DEVICES info \", response);\n          let data = response.data[0];\n          this.deviceMode = data.onMode;\n          this.deviceCurrentCredit = data.currentCredit;\n          this.deviceLastInsertCredit = data.lastInsertCredit;\n          this.deviceLastInsertDate = data.lastInsertDate;\n          this.deviceUpdatedDate = data.updatedDate;\n        })\n        .catch((e) => {\n          console.log(\"ERROR |\", e);\n        });\n    },\n    async getHistory(deviceId) {\n      let loader = this.$loading.show({\n        // Optional parameters\n        color: \"blue\",\n        canCancel: true,\n      });\n      var sdate = moment()\n        .subtract(7, \"days\")\n        .format(\"YYYY-MM-DD HH:mm:ss\");\n      var edate = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      await axios\n        .get(\n          `${this.SERVER_URL}/getTransectionByDeviceId?deviceId=${deviceId}&sdate=${sdate}&edate=${edate}&limit=2000`\n        )\n        .then((response) => {\n          console.log(\"HISTORY lIST \", response);\n          this.rows = response.data;\n          loader.hide();\n        })\n        .catch((e) => {\n          console.log(\"ERROR |\", e);\n          loader.hide();\n        });\n    },\n  },\n   beforeDestroy() {\n    clearInterval(this.polling);\n  },\n  \n  created() {\n    this.getHistory(this.deviceId);\n    this.pollData();\n  },\n};\n</script>\n<style></style>\n"]}]}