{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\Collapse\\CollapseItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\Collapse\\CollapseItem.vue","mtime":1607769978125},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { CollapseTransition } from 'vue2-transitions';\r\n\r\nexport default {\r\n  name: 'collapse-item',\r\n  components: {\r\n    CollapseTransition\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: '',\r\n      description: 'Collapse item title'\r\n    },\r\n    id: String\r\n  },\r\n  inject: {\r\n    animationDuration: {\r\n      default: 250\r\n    },\r\n    multipleActive: {\r\n      default: false\r\n    },\r\n    addItem: {\r\n      default: () => {}\r\n    },\r\n    removeItem: {\r\n      default: () => {}\r\n    },\r\n    deactivateAll: {\r\n      default: () => {}\r\n    }\r\n  },\r\n  computed: {\r\n    itemId() {\r\n      return this.id || this.title;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      active: false\r\n    };\r\n  },\r\n  methods: {\r\n    activate() {\r\n      let wasActive = this.active;\r\n      if (!this.multipleActive) {\r\n        this.deactivateAll();\r\n      }\r\n      this.active = !wasActive;\r\n      console.log(this.active)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.addItem(this);\r\n  },\r\n  destroyed() {\r\n    if (this.$el && this.$el.parentNode) {\r\n      this.$el.parentNode.removeChild(this.$el);\r\n    }\r\n    this.removeItem(this);\r\n  }\r\n};\r\n",{"version":3,"sources":["CollapseItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CollapseItem.vue","sourceRoot":"src/components/Collapse","sourcesContent":["<template>\r\n  <b-card no-body>\r\n    <b-card-header role=\"tab\" class=\"card-header\" :aria-expanded=\"active\">\r\n      <a\r\n        data-toggle=\"collapse\"\r\n        data-parent=\"#accordion\"\r\n        :href=\"`#${itemId}`\"\r\n        @click.prevent=\"activate\"\r\n        :aria-controls=\"`content-${itemId}`\"\r\n      >\r\n        <slot name=\"title\"> {{ title }} </slot>\r\n        <i class=\"tim-icons icon-minimal-down\"></i>\r\n      </a>\r\n    </b-card-header>\r\n    <collapse-transition :duration=\"animationDuration\">\r\n      <div\r\n        v-show=\"active\"\r\n        :id=\"`content-${itemId}`\"\r\n        role=\"tabpanel\"\r\n        :aria-labelledby=\"title\"\r\n        class=\"collapsed\"\r\n      >\r\n        <div class=\"card-body\"><slot></slot></div>\r\n      </div>\r\n    </collapse-transition>\r\n  </b-card>\r\n</template>\r\n<script>\r\nimport { CollapseTransition } from 'vue2-transitions';\r\n\r\nexport default {\r\n  name: 'collapse-item',\r\n  components: {\r\n    CollapseTransition\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: '',\r\n      description: 'Collapse item title'\r\n    },\r\n    id: String\r\n  },\r\n  inject: {\r\n    animationDuration: {\r\n      default: 250\r\n    },\r\n    multipleActive: {\r\n      default: false\r\n    },\r\n    addItem: {\r\n      default: () => {}\r\n    },\r\n    removeItem: {\r\n      default: () => {}\r\n    },\r\n    deactivateAll: {\r\n      default: () => {}\r\n    }\r\n  },\r\n  computed: {\r\n    itemId() {\r\n      return this.id || this.title;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      active: false\r\n    };\r\n  },\r\n  methods: {\r\n    activate() {\r\n      let wasActive = this.active;\r\n      if (!this.multipleActive) {\r\n        this.deactivateAll();\r\n      }\r\n      this.active = !wasActive;\r\n      console.log(this.active)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.addItem(this);\r\n  },\r\n  destroyed() {\r\n    if (this.$el && this.$el.parentNode) {\r\n      this.$el.parentNode.removeChild(this.$el);\r\n    }\r\n    this.removeItem(this);\r\n  }\r\n};\r\n</script>\r\n<style></style>\r\n"]}]}