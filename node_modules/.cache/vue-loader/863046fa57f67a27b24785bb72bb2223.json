{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Dashboard\\PageVisitsTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Dashboard\\PageVisitsTable.vue","mtime":1607772359693},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { SERVER_PARAMS } from '../../environment/environment';\r\n\r\nimport {\r\n  Table,\r\n  TableColumn,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n} from \"element-ui\";\r\nexport default {\r\n  name: \"page-visits-table\",\r\n  components: {\r\n    [Table.name]: Table,\r\n    [TableColumn.name]: TableColumn,\r\n    [Dropdown.name]: Dropdown,\r\n    [DropdownItem.name]: DropdownItem,\r\n    [DropdownMenu.name]: DropdownMenu,\r\n  },\r\n  data() {\r\n    return {\r\n      polling: null,\r\n      SERVER_URL: SERVER_PARAMS.URL,\r\n      tableData: [\r\n        {\r\n          page: \"/argon/\",\r\n          visitors: \"4,569\",\r\n          unique: \"340\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n        {\r\n          page: \"/argon/index.html\",\r\n          visitors: \"3,985\",\r\n          unique: \"319\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n        {\r\n          page: \"/argon/charts.html\",\r\n          visitors: \"3,513\",\r\n          unique: \"294\",\r\n          bounceRate: \"36,49%\",\r\n        },\r\n        {\r\n          page: \"/argon/tables.html\",\r\n          visitors: \"2,050\",\r\n          unique: \"147\",\r\n          bounceRate: \"50,87%\",\r\n        },\r\n        {\r\n          page: \"/argon/profile.html\",\r\n          visitors: \"1,795\",\r\n          unique: \"190\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    getModeText(mode){\r\n    //console.log(\"MODE---> \",mode)\r\n      if(mode === null){\r\n        return \"\";\r\n      }\r\n      mode = Number(mode);\r\n      switch(mode){\r\n        case 3:\r\n          return \"High Pressure Water\";\r\n        case 4:\r\n          return \"Vacuum Cleaner\";\r\n        case 5:\r\n          return \"Shampoo\";\r\n        case 6:\r\n          return \"Blower\";\r\n        case 7:\r\n          return \"Water\";\r\n        default:\r\n          return \"No mode selected\"\r\n      }\r\n    },\r\n    async getCurrentStates() {\r\n      await axios\r\n        .get(`${this.SERVER_URL}/getDeviceBySite?site=Rayong-1`)\r\n        .then((response) => {\r\n          console.log(\"DEVICES lIST \", response);\r\n          this.tableData = [];\r\n          if (response.data.length > 0) {\r\n            let states = response.data.map(x => {\r\n              return {\r\n                currentCredit: x.currentCredit,\r\n                deviceId: x.deviceId,\r\n                insertedCredit: x.insertedCredit,\r\n                onMode: this.getModeText(x.onMode),\r\n                updatedDate: x.updatedDate,\r\n                timeStamp: x.timeStamp\r\n              }\r\n            })\r\n            this.tableData = states;\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    pollData () {\r\n\t\tthis.polling = setInterval(() => {\r\n\t\t\tthis.getCurrentStates();\r\n\t\t}, 2000)\r\n\t}\r\n  },\r\n  async created() {\r\n    await this.getCurrentStates();\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.polling);\r\n  },\r\n  created() {\r\n    this.pollData();\r\n  },\r\n};\r\n",{"version":3,"sources":["PageVisitsTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageVisitsTable.vue","sourceRoot":"src/views/Dashboard","sourcesContent":["<template>\r\n  <b-card body-class=\"p-0\" header-class=\"border-0\">\r\n    <template v-slot:header>\r\n      <b-row align-v=\"center\">\r\n        <b-col>\r\n          <h3 class=\"mb-0\">Device current states</h3>\r\n        </b-col>\r\n        <!-- <b-col class=\"text-right\">\r\n          <a href=\"#!\" class=\"btn btn-sm btn-primary\">See all</a>\r\n        </b-col> -->\r\n      </b-row>\r\n    </template>\r\n\r\n    <el-table\r\n      class=\"table-responsive table\"\r\n      :data=\"tableData\"\r\n      header-row-class-name=\"thead-light\"\r\n    >\r\n      <el-table-column label=\"Device Id\" min-width=\"90px\" prop=\"deviceId\">\r\n        <template v-slot=\"{ row }\">\r\n          <div class=\"font-weight-600\">{{ row.deviceId }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"Updated Date\"\r\n        min-width=\"180px\"\r\n        prop=\"updatedDate\"\r\n      >\r\n      </el-table-column>\r\n      <el-table-column label=\"Selected Mode\" min-width=\"150px\" prop=\"onMode\">\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"Credit\" min-width=\"150px\" prop=\"currentCredit\">\r\n        <template v-slot=\"{ row }\">\r\n          {{ row.currentCredit }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"Last inserted credit\"\r\n        min-width=\"150px\"\r\n        prop=\"lastInsertCredit\"\r\n      >\r\n      </el-table-column>\r\n    </el-table>\r\n  </b-card>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { SERVER_PARAMS } from '../../environment/environment';\r\n\r\nimport {\r\n  Table,\r\n  TableColumn,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n} from \"element-ui\";\r\nexport default {\r\n  name: \"page-visits-table\",\r\n  components: {\r\n    [Table.name]: Table,\r\n    [TableColumn.name]: TableColumn,\r\n    [Dropdown.name]: Dropdown,\r\n    [DropdownItem.name]: DropdownItem,\r\n    [DropdownMenu.name]: DropdownMenu,\r\n  },\r\n  data() {\r\n    return {\r\n      polling: null,\r\n      SERVER_URL: SERVER_PARAMS.URL,\r\n      tableData: [\r\n        {\r\n          page: \"/argon/\",\r\n          visitors: \"4,569\",\r\n          unique: \"340\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n        {\r\n          page: \"/argon/index.html\",\r\n          visitors: \"3,985\",\r\n          unique: \"319\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n        {\r\n          page: \"/argon/charts.html\",\r\n          visitors: \"3,513\",\r\n          unique: \"294\",\r\n          bounceRate: \"36,49%\",\r\n        },\r\n        {\r\n          page: \"/argon/tables.html\",\r\n          visitors: \"2,050\",\r\n          unique: \"147\",\r\n          bounceRate: \"50,87%\",\r\n        },\r\n        {\r\n          page: \"/argon/profile.html\",\r\n          visitors: \"1,795\",\r\n          unique: \"190\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    getModeText(mode){\r\n    //console.log(\"MODE---> \",mode)\r\n      if(mode === null){\r\n        return \"\";\r\n      }\r\n      mode = Number(mode);\r\n      switch(mode){\r\n        case 3:\r\n          return \"High Pressure Water\";\r\n        case 4:\r\n          return \"Vacuum Cleaner\";\r\n        case 5:\r\n          return \"Shampoo\";\r\n        case 6:\r\n          return \"Blower\";\r\n        case 7:\r\n          return \"Water\";\r\n        default:\r\n          return \"No mode selected\"\r\n      }\r\n    },\r\n    async getCurrentStates() {\r\n      await axios\r\n        .get(`${this.SERVER_URL}/getDeviceBySite?site=Rayong-1`)\r\n        .then((response) => {\r\n          console.log(\"DEVICES lIST \", response);\r\n          this.tableData = [];\r\n          if (response.data.length > 0) {\r\n            let states = response.data.map(x => {\r\n              return {\r\n                currentCredit: x.currentCredit,\r\n                deviceId: x.deviceId,\r\n                insertedCredit: x.insertedCredit,\r\n                onMode: this.getModeText(x.onMode),\r\n                updatedDate: x.updatedDate,\r\n                timeStamp: x.timeStamp\r\n              }\r\n            })\r\n            this.tableData = states;\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    pollData () {\r\n\t\tthis.polling = setInterval(() => {\r\n\t\t\tthis.getCurrentStates();\r\n\t\t}, 2000)\r\n\t}\r\n  },\r\n  async created() {\r\n    await this.getCurrentStates();\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.polling);\r\n  },\r\n  created() {\r\n    this.pollData();\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"]}]}