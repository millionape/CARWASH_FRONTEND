{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Dashboard.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Dashboard.vue","mtime":1607772530682},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.el-table .cell {\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n}\r\n.graphCard {\r\n  height: 600px !important;\r\n}\r\n.statusCard {\r\n  height: 8rem !important;\r\n}\r\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAycA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\r\n      <!-- Card stats -->\r\n      <b-row>\r\n        <b-col xl=\"3\" md=\"6\">\r\n          <stats-card\r\n            title=\"Total income in this year\"\r\n            type=\"gradient-info\"\r\n            :sub-title=\"String(numberWithCommas(year_total)) + ' BTH'\"\r\n            icon=\"ni ni-chart-bar-32\"\r\n            class=\"mb-4 statusCard\"\r\n          >\r\n            <template slot=\"footer\">\r\n              <!-- <span class=\"text-success mr-2\">54.8%</span>\r\n              <span class=\"text-nowrap\">Since last month</span> -->\r\n            </template>\r\n          </stats-card>\r\n        </b-col>\r\n        <b-col xl=\"3\" md=\"6\">\r\n          <stats-card\r\n            title=\"Total income in this month\"\r\n            type=\"gradient-red\"\r\n            :sub-title=\"String(numberWithCommas(month_total)) + ' BTH'\"\r\n            icon=\"ni ni-active-40\"\r\n            class=\"mb-4 statusCard\"\r\n          >\r\n            <template slot=\"footer\">\r\n              <!-- <span class=\"text-success mr-2\">3.48%</span>\r\n              <span class=\"text-nowrap\">Total income in this month</span> -->\r\n            </template>\r\n          </stats-card>\r\n        </b-col>\r\n        <b-col xl=\"3\" md=\"6\">\r\n          <stats-card\r\n            title=\"Total income in last 7 days\"\r\n            type=\"gradient-orange\"\r\n            :sub-title=\"String(numberWithCommas(seven_day_total)) + ' BTH'\"\r\n            icon=\"ni ni-chart-pie-35\"\r\n            class=\"mb-4 statusCard\"\r\n          >\r\n            <template slot=\"footer\">\r\n              <!-- <span class=\"text-success mr-2\">12.18%</span>\r\n              <span class=\"text-nowrap\">Total income in last 7 days</span> -->\r\n            </template>\r\n          </stats-card>\r\n        </b-col>\r\n        <b-col xl=\"3\" md=\"6\">\r\n          <stats-card\r\n            title=\"Current income in this day\"\r\n            type=\"gradient-green\"\r\n            :sub-title=\"String(numberWithCommas(day_total)) + ' BTH'\"\r\n            icon=\"ni ni-money-coins\"\r\n            class=\"mb-4 statusCard\"\r\n          >\r\n            <template slot=\"footer\">\r\n              <!-- <span class=\"text-danger mr-2\">5.72%</span>\r\n              <span class=\"text-nowrap\">Since last month</span> -->\r\n            </template>\r\n          </stats-card>\r\n        </b-col>\r\n      </b-row>\r\n    </base-header>\r\n\r\n    <!--Charts-->\r\n    <b-container fluid class=\"mt--7\">\r\n      <b-row>\r\n        <b-col xl=\"12\" class=\"mb-5 mb-xl-0\">\r\n          <card header-classes=\"bg-transparent\" class=\"h-100 graphCard\">\r\n            <b-row align-v=\"center\" slot=\"header\">\r\n              <b-col>\r\n                <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Income</h6>\r\n                <h5 class=\"h3 mb-0\">Current income by devices</h5>\r\n              </b-col>\r\n            </b-row>\r\n\r\n            <canvas style=\"height:100%; width:100%\" id=\"my-chart\"></canvas>\r\n          </card>\r\n        </b-col>\r\n        <br />\r\n        <br />\r\n        <b-col xl=\"12\" class=\"mb-5 mt-5 mb-xl-0\">\r\n          <card header-classes=\"bg-transparent\" class=\"graphCard\">\r\n            <b-row align-v=\"center\" slot=\"header\">\r\n              <b-col>\r\n                <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Income</h6>\r\n                <h5 class=\"h3 mb-0\">Total Income Graph</h5>\r\n              </b-col>\r\n              <b-col>\r\n                <b-nav class=\"nav-pills justify-content-end\">\r\n                  <b-nav-item\r\n                    class=\"mr-2 mr-md-0\"\r\n                    link-classes=\"py-2 px-3\"\r\n                    @click.prevent=\"initTotalChart()\"\r\n                  >\r\n                    <span class=\"d-none d-md-block\">Week</span>\r\n                    <span class=\"d-md-none\">W</span>\r\n                  </b-nav-item>\r\n                  <b-nav-item\r\n                    link-classes=\"py-2 px-3\"\r\n                    @click.prevent=\"initTotalChart2()\"\r\n                  >\r\n                    <span class=\"d-none d-md-block\">Month</span>\r\n                    <span class=\"d-md-none\">Y</span>\r\n                  </b-nav-item>\r\n                </b-nav>\r\n              </b-col>\r\n            </b-row>\r\n            <div style=\"height:100%; width:100%\" id=\"chartContainer\">\r\n              <canvas\r\n                style=\"height:100% !important; width:100% !important\"\r\n                id=\"big-chart\"\r\n              ></canvas>\r\n            </div>\r\n          </card>\r\n        </b-col>\r\n      </b-row>\r\n      <!-- End charts-->\r\n\r\n      <!--Tables-->\r\n      <b-row class=\"mt-5\">\r\n        <b-col xl=\"12\" class=\"mb-5 mb-xl-0\">\r\n          <page-visits-table></page-visits-table>\r\n        </b-col>\r\n        <!-- <b-col xl=\"4\" class=\"mb-5 mb-xl-0\">\r\n          <social-traffic-table></social-traffic-table>\r\n        </b-col> -->\r\n      </b-row>\r\n      <!--End tables-->\r\n    </b-container>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n// Charts\r\nimport * as chartConfigs from \"@/components/Charts/config\";\r\nimport LineChart from \"@/components/Charts/LineChart\";\r\nimport Chart from \"chart.js\";\r\n\r\n// Components\r\nimport BaseProgress from \"@/components/BaseProgress\";\r\nimport StatsCard from \"@/components/Cards/StatsCard\";\r\n\r\n// Tables\r\nimport SocialTrafficTable from \"./Dashboard/SocialTrafficTable\";\r\nimport PageVisitsTable from \"./Dashboard/PageVisitsTable\";\r\nimport { SERVER_PARAMS } from \"../environment/environment\";\r\n\r\nexport default {\r\n  components: {\r\n    LineChart,\r\n    BaseProgress,\r\n    StatsCard,\r\n    PageVisitsTable,\r\n    SocialTrafficTable,\r\n  },\r\n  data() {\r\n    return {\r\n      SERVER_URL: SERVER_PARAMS.URL,\r\n      // SERVER_URL: \"http://0.0.0.0:3000\",\r\n      day_total: 0,\r\n      month_total: 0,\r\n      seven_day_total: 0,\r\n      year_total: 0,\r\n      chartTypeSelected: \"month\",\r\n      myChart: null,\r\n      barChartRender: false,\r\n      bigLineChart: {\r\n        activeIndex: 0,\r\n        chartData: {\r\n          datasets: [\r\n            {\r\n              label: \"Performance\",\r\n              data: [0, 20, 10, 30, 15, 40, 20, 60, 60],\r\n            },\r\n          ],\r\n          labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n        },\r\n        extraOptions: chartConfigs.blueChartOptions,\r\n      },\r\n      redBarChart: {\r\n        chartData: {\r\n          labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n          datasets: [\r\n            {\r\n              label: \"Sales\",\r\n              data: [25, 20, 30, 22, 17, 29],\r\n            },\r\n          ],\r\n        },\r\n        extraOptions: chartConfigs.blueChartOptions,\r\n      },\r\n      monthChart: {\r\n        labels: [],\r\n        data: [],\r\n      },\r\n      yearChart: {\r\n        labels: [],\r\n        data: [],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    initBigChart(index) {\r\n      let chartData = {\r\n        datasets: [\r\n          {\r\n            label: \"Performance\",\r\n            data: this.bigLineChart.allData[index],\r\n          },\r\n        ],\r\n        labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      };\r\n      this.bigLineChart.chartData = chartData;\r\n      this.bigLineChart.activeIndex = index;\r\n    },\r\n    numberWithCommas(x) {\r\n      if (x === null || x === undefined) {\r\n        x = 0;\r\n      }\r\n      x = String(x);\r\n      return x.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    },\r\n    async getTotalIncome_day() {\r\n      var m = moment();\r\n      m.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\r\n      let date = moment(m).format(\"YYYY-MM-DD HH:mm:ss\");\r\n      await axios\r\n        .get(\r\n          `${this.SERVER_URL}/getTotalIncomeInDay?site=Rayong-1&sdate=${date}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.day_total = 0;\r\n          if (response.data.length > 0) {\r\n            for (let transection of response.data) {\r\n              this.day_total += transection.insertedCredit;\r\n            }\r\n            console.log(\"this day: \", this.day_total);\r\n            var grouped = _.groupBy(response.data, function(item) {\r\n              return item.deviceId;\r\n            });\r\n            this.redBarChart.chartData.labels = [];\r\n            this.redBarChart.chartData.datasets = [];\r\n            for (let key in grouped) {\r\n              this.redBarChart.chartData.labels.push(key);\r\n              let tmp_counter = 0;\r\n              console.log(\"push key :\", key);\r\n              for (let items of grouped[key]) {\r\n                tmp_counter += items.insertedCredit;\r\n                // console.log(\"add money :\",tmp_counter);\r\n              }\r\n              this.redBarChart.chartData.datasets.push(tmp_counter);\r\n            }\r\n            console.log(\"GROUPED ITEMS :\", grouped);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    async getTotalIncome_last_7_days() {\r\n      // var m = moment();\r\n      // m = m.subtract(7, \"days\");\r\n      // m.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\r\n      let date = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n      await axios\r\n        .get(\r\n          `${this.SERVER_URL}/getTotalIncomeLast7Days?site=Rayong-1&date=${date}`\r\n        )\r\n        .then((response) => {\r\n          console.log(\"7days income :\", response);\r\n          this.seven_day_total = 0;\r\n          this.monthChart.data = [];\r\n          this.bigLineChart.chartData.datasets = [];\r\n          if (response.data.length > 0) {\r\n            for (let incomes of response.data) {\r\n              this.seven_day_total += incomes.money;\r\n              let income_date = moment()\r\n                .date(incomes.day)\r\n                .format(\"YYYY-MM-DD\");\r\n              this.monthChart.labels.push(income_date);\r\n              this.monthChart.data.push(incomes.money);\r\n              // this.bigLineChart.chartData.labels.push(income_date);\r\n              // this.bigLineChart.chartData.datasets.push(incomes.money);\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    async getTotalIncome_year() {\r\n      // var m = moment();\r\n      // m = m.subtract(7, \"days\");\r\n      // m.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\r\n      let date = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n      await axios\r\n        .get(\r\n          `${this.SERVER_URL}/getTotalIncomeThisYear?site=Rayong-1&date=${date}`\r\n        )\r\n        .then((response) => {\r\n          console.log(\"7days income :\", response);\r\n          this.year_total = 0;\r\n          // this.bigLineChart.chartData.labels = [];\r\n          // this.bigLineChart.chartData.datasets = [];\r\n          this.yearChart.labels = [];\r\n          this.yearChart.data = [];\r\n          if (response.data.length > 0) {\r\n            for (let incomes of response.data) {\r\n              this.year_total += incomes.money;\r\n              console.log(\"year total: \", this.year_total);\r\n              let income_date = moment(date)\r\n                .set(\"month\", incomes.month - 1)\r\n                .format(\"YYYY-MM\");\r\n              // this.bigLineChart.chartData.labels.push(income_date);\r\n              // this.bigLineChart.chartData.datasets.push(incomes.money);\r\n              this.yearChart.data.push(incomes.money);\r\n              this.yearChart.labels.push(income_date);\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    async getTotalIncome_month() {\r\n      const startOfMonth = moment()\r\n        .startOf(\"month\")\r\n        .format(\"YYYY-MM-DD HH:mm:ss\");\r\n      await axios\r\n        .get(\r\n          `${this.SERVER_URL}/getTotalIncomeInMonth?site=Rayong-1&sdate=${startOfMonth}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.month_total = 0;\r\n          if (response.data.length > 0) {\r\n            this.month_total = response.data[0].money;\r\n            console.log(\"month_total : \", this.month_total);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    initDevicesChart() {\r\n      var ctx = document.getElementById(\"my-chart\");\r\n      var myChart = new Chart(ctx, {\r\n        type: \"bar\",\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              maxBarThickness: 2,\r\n            },\r\n          ],\r\n        },\r\n        dataPointWidth: 20,\r\n        data: {\r\n          labels: this.redBarChart.chartData.labels,\r\n          datasets: [\r\n            {\r\n              label: \"Income\",\r\n              data: this.redBarChart.chartData.datasets,\r\n              borderColor: \"#6E7EF5\",\r\n              backgroundColor: \"#E75F5B\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n        },\r\n      });\r\n      myChart.update();\r\n    },\r\n    initTotalChart() {\r\n      document.getElementById(\"chartContainer\").innerHTML = \"&nbsp;\";\r\n      document.getElementById(\"chartContainer\").innerHTML = '<canvas style=\"height:100% !important; width:100% !important\" id=\"big-chart\"></canvas>';\r\n      var ctx = document.getElementById(\"big-chart\");\r\n      if (this.myChart !== null) {\r\n        this.myChart.destroy();\r\n      }\r\n      if (ctx !== null) {\r\n        var myChart = new Chart(ctx, {\r\n          type: \"line\",\r\n          data: {\r\n            labels: this.monthChart.labels,\r\n            datasets: [\r\n              {\r\n                label: \"Income\",\r\n                data: this.monthChart.data,\r\n                borderColor: \"#6E7EF5\",\r\n                backgroundColor: \"#6E7EF5\",\r\n                fill: false,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n          },\r\n        });\r\n        this.myChart = myChart;\r\n      }\r\n    },\r\n    initTotalChart2() {\r\n      document.getElementById(\"chartContainer\").innerHTML = \"&nbsp;\";\r\n      document.getElementById(\"chartContainer\").innerHTML = '<canvas style=\"height:100% !important; width:100% !important\" id=\"big-chart\"></canvas>';\r\n      var ctx = document.getElementById(\"big-chart\");\r\n      if (this.myChart !== null) {\r\n        this.myChart.destroy();\r\n      }\r\n      if (ctx !== null) {\r\n        var myChart = new Chart(ctx, {\r\n          type: \"bar\",\r\n          data: {\r\n            labels: this.yearChart.labels,\r\n            datasets: [\r\n              {\r\n                label: \"Income\",\r\n                data: this.yearChart.data,\r\n                borderColor: \"#6E7EF5\",\r\n                backgroundColor: \"#6E7EF5\",\r\n                fill: false,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n          },\r\n        });\r\n        this.myChart = myChart;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initBigChart(0);\r\n  },\r\n  async created() {\r\n    let loader = this.$loading.show({\r\n      // Optional parameters\r\n      color: \"blue\",\r\n      canCancel: true,\r\n    });\r\n    await this.getTotalIncome_day();\r\n    await this.getTotalIncome_month();\r\n    await this.getTotalIncome_last_7_days();\r\n    await this.getTotalIncome_year();\r\n    this.initTotalChart();\r\n    this.initDevicesChart();\r\n    loader.hide();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n.el-table .cell {\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n}\r\n.graphCard {\r\n  height: 600px !important;\r\n}\r\n.statusCard {\r\n  height: 8rem !important;\r\n}\r\n</style>\r\n"]}]}