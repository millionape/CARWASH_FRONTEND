{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\Tabs\\Tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\Tabs\\Tabs.vue","mtime":1607769978136},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'tabs',\r\n  components: {\r\n    TabItemContent: {\r\n      props: ['tab'],\r\n      render(h) {\r\n        return h('div', [this.tab.$slots.title || this.tab.title]);\r\n      }\r\n    }\r\n  },\r\n  provide() {\r\n    return {\r\n      addTab: this.addTab,\r\n      removeTab: this.removeTab\r\n    };\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: 'primary',\r\n      validator: value => {\r\n        let acceptedValues = [\r\n          'primary',\r\n          'info',\r\n          'success',\r\n          'warning',\r\n          'danger'\r\n        ];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      }\r\n    },\r\n    activeTab: {\r\n      type: String,\r\n      default: '',\r\n      description: 'Active tab name'\r\n    },\r\n    tabNavWrapperClasses: {\r\n      type: [String, Object],\r\n      default: '',\r\n      description: 'ul wrapper css classes'\r\n    },\r\n    tabNavClasses: {\r\n      type: [String, Object],\r\n      default: '',\r\n      description: 'ul css classes'\r\n    },\r\n    tabContentClasses: {\r\n      type: [String, Object],\r\n      default: '',\r\n      description: 'tab content css classes'\r\n    },\r\n    vertical: Boolean,\r\n    centered: Boolean,\r\n    value: String\r\n  },\r\n  data() {\r\n    return {\r\n      tabs: []\r\n    };\r\n  },\r\n  methods: {\r\n    findAndActivateTab(title) {\r\n      let tabToActivate = this.tabs.find(t => t.title === title);\r\n      if (tabToActivate) {\r\n        this.activateTab(tabToActivate);\r\n      }\r\n    },\r\n    activateTab(tab) {\r\n      if (this.handleClick) {\r\n        this.handleClick(tab);\r\n      }\r\n      this.deactivateTabs();\r\n      tab.active = true;\r\n    },\r\n    deactivateTabs() {\r\n      this.tabs.forEach(tab => {\r\n        tab.active = false;\r\n      });\r\n    },\r\n    addTab(tab) {\r\n      const index = this.$slots.default.indexOf(tab.$vnode);\r\n      if (!this.activeTab && index === 0) {\r\n        tab.active = true;\r\n      }\r\n      if (this.activeTab === tab.name) {\r\n        tab.active = true;\r\n      }\r\n      this.tabs.splice(index, 0, tab);\r\n    },\r\n    removeTab(tab) {\r\n      const tabs = this.tabs;\r\n      const index = tabs.indexOf(tab);\r\n      if (index > -1) {\r\n        tabs.splice(index, 1);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      if (this.value) {\r\n        this.findAndActivateTab(this.value);\r\n      }\r\n    });\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      this.findAndActivateTab(newVal);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tabs.vue","sourceRoot":"src/components/Tabs","sourcesContent":["<template>\r\n  <div>\r\n    <div\r\n      :class=\"[\r\n        { 'col-md-4': vertical && !tabNavWrapperClasses },\r\n        { 'col-12': centered && !tabNavWrapperClasses },\r\n        tabNavWrapperClasses\r\n      ]\"\r\n    >\r\n      <b-nav\r\n        class=\"nav-pills\"\r\n        role=\"tablist\"\r\n        :class=\"[\r\n          `nav-pills-${type}`,\r\n          { 'flex-column': vertical },\r\n          { 'justify-content-center': centered },\r\n          tabNavClasses\r\n        ]\"\r\n      >\r\n        <b-nav-item\r\n          v-for=\"tab in tabs\"\r\n          class=\"active\"\r\n          data-toggle=\"tab\"\r\n          role=\"tablist\"\r\n          :active=\"tab.active\"\r\n          :key=\"tab.id\"\r\n          :href=\"`#${tab.id}`\"\r\n          @click.prevent=\"activateTab(tab)\"\r\n          :aria-expanded=\"tab.active\"\r\n        >\r\n          <tab-item-content :tab=\"tab\"> </tab-item-content>\r\n        </b-nav-item>\r\n      </b-nav>\r\n    </div>\r\n    <div\r\n      class=\"tab-content\"\r\n      :class=\"[\r\n        { 'tab-space': !vertical },\r\n        { 'col-md-8': vertical && !tabContentClasses },\r\n        tabContentClasses\r\n      ]\"\r\n    >\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'tabs',\r\n  components: {\r\n    TabItemContent: {\r\n      props: ['tab'],\r\n      render(h) {\r\n        return h('div', [this.tab.$slots.title || this.tab.title]);\r\n      }\r\n    }\r\n  },\r\n  provide() {\r\n    return {\r\n      addTab: this.addTab,\r\n      removeTab: this.removeTab\r\n    };\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: 'primary',\r\n      validator: value => {\r\n        let acceptedValues = [\r\n          'primary',\r\n          'info',\r\n          'success',\r\n          'warning',\r\n          'danger'\r\n        ];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      }\r\n    },\r\n    activeTab: {\r\n      type: String,\r\n      default: '',\r\n      description: 'Active tab name'\r\n    },\r\n    tabNavWrapperClasses: {\r\n      type: [String, Object],\r\n      default: '',\r\n      description: 'ul wrapper css classes'\r\n    },\r\n    tabNavClasses: {\r\n      type: [String, Object],\r\n      default: '',\r\n      description: 'ul css classes'\r\n    },\r\n    tabContentClasses: {\r\n      type: [String, Object],\r\n      default: '',\r\n      description: 'tab content css classes'\r\n    },\r\n    vertical: Boolean,\r\n    centered: Boolean,\r\n    value: String\r\n  },\r\n  data() {\r\n    return {\r\n      tabs: []\r\n    };\r\n  },\r\n  methods: {\r\n    findAndActivateTab(title) {\r\n      let tabToActivate = this.tabs.find(t => t.title === title);\r\n      if (tabToActivate) {\r\n        this.activateTab(tabToActivate);\r\n      }\r\n    },\r\n    activateTab(tab) {\r\n      if (this.handleClick) {\r\n        this.handleClick(tab);\r\n      }\r\n      this.deactivateTabs();\r\n      tab.active = true;\r\n    },\r\n    deactivateTabs() {\r\n      this.tabs.forEach(tab => {\r\n        tab.active = false;\r\n      });\r\n    },\r\n    addTab(tab) {\r\n      const index = this.$slots.default.indexOf(tab.$vnode);\r\n      if (!this.activeTab && index === 0) {\r\n        tab.active = true;\r\n      }\r\n      if (this.activeTab === tab.name) {\r\n        tab.active = true;\r\n      }\r\n      this.tabs.splice(index, 0, tab);\r\n    },\r\n    removeTab(tab) {\r\n      const tabs = this.tabs;\r\n      const index = tabs.indexOf(tab);\r\n      if (index > -1) {\r\n        tabs.splice(index, 1);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      if (this.value) {\r\n        this.findAndActivateTab(this.value);\r\n      }\r\n    });\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      this.findAndActivateTab(newVal);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]}]}