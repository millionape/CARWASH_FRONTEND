{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\Collapse\\Collapse.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\components\\Collapse\\Collapse.vue","mtime":1607769978125},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'collapse',\r\n  props: {\r\n    animationDuration: {\r\n      type: Number,\r\n      default: 250,\r\n      description: 'Collapse animation duration'\r\n    },\r\n    multipleActive: {\r\n      type: Boolean,\r\n      default: true,\r\n      description: 'Whether you can have multiple collapse items opened at the same time'\r\n    },\r\n    activeIndex: {\r\n      type: Number,\r\n      default: -1,\r\n      description: 'Active collapse item index'\r\n    }\r\n  },\r\n  provide() {\r\n    return {\r\n      animationDuration: this.animationDuration,\r\n      multipleActive: this.multipleActive,\r\n      addItem: this.addItem,\r\n      removeItem: this.removeItem,\r\n      deactivateAll: this.deactivateAll\r\n    };\r\n  },\r\n  data() {\r\n    return {\r\n      items: []\r\n    };\r\n  },\r\n  methods: {\r\n    addItem(item) {\r\n      const index = this.$slots.default.indexOf(item.$vnode);\r\n      if (index !== -1) {\r\n        this.items.splice(index, 0, item);\r\n      }\r\n    },\r\n    removeItem(item) {\r\n      const items = this.items;\r\n      const index = items.indexOf(item);\r\n      if (index > -1) {\r\n        items.splice(index, 1);\r\n      }\r\n    },\r\n    deactivateAll() {\r\n      this.items.forEach(item => {\r\n        item.active = false;\r\n      });\r\n    },\r\n    activateItem() {\r\n      if (this.activeIndex !== -1) {\r\n        this.items[this.activeIndex].active = true;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.activateItem();\r\n    });\r\n  },\r\n  watch: {\r\n    activeIndex() {\r\n      this.activateItem();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Collapse.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Collapse.vue","sourceRoot":"src/components/Collapse","sourcesContent":["<template>\r\n  <div\r\n    id=\"accordion\"\r\n    role=\"tablist\"\r\n    aria-multiselectable=\"true\"\r\n    class=\"accordion\"\r\n  >\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'collapse',\r\n  props: {\r\n    animationDuration: {\r\n      type: Number,\r\n      default: 250,\r\n      description: 'Collapse animation duration'\r\n    },\r\n    multipleActive: {\r\n      type: Boolean,\r\n      default: true,\r\n      description: 'Whether you can have multiple collapse items opened at the same time'\r\n    },\r\n    activeIndex: {\r\n      type: Number,\r\n      default: -1,\r\n      description: 'Active collapse item index'\r\n    }\r\n  },\r\n  provide() {\r\n    return {\r\n      animationDuration: this.animationDuration,\r\n      multipleActive: this.multipleActive,\r\n      addItem: this.addItem,\r\n      removeItem: this.removeItem,\r\n      deactivateAll: this.deactivateAll\r\n    };\r\n  },\r\n  data() {\r\n    return {\r\n      items: []\r\n    };\r\n  },\r\n  methods: {\r\n    addItem(item) {\r\n      const index = this.$slots.default.indexOf(item.$vnode);\r\n      if (index !== -1) {\r\n        this.items.splice(index, 0, item);\r\n      }\r\n    },\r\n    removeItem(item) {\r\n      const items = this.items;\r\n      const index = items.indexOf(item);\r\n      if (index > -1) {\r\n        items.splice(index, 1);\r\n      }\r\n    },\r\n    deactivateAll() {\r\n      this.items.forEach(item => {\r\n        item.active = false;\r\n      });\r\n    },\r\n    activateItem() {\r\n      if (this.activeIndex !== -1) {\r\n        this.items[this.activeIndex].active = true;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.activateItem();\r\n    });\r\n  },\r\n  watch: {\r\n    activeIndex() {\r\n      this.activateItem();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]}]}