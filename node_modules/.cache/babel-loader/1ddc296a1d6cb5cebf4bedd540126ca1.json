{"remainingRequest":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/thread-loader/dist/cjs.js!/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/src/views/Devices.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/src/views/Devices.vue","mtime":1607342543469},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/cache-loader/dist/cjs.js","mtime":1606987769885},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/thread-loader/dist/cjs.js","mtime":1606987773900},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/babel-loader/lib/index.js","mtime":1606987769374},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/cache-loader/dist/cjs.js","mtime":1606987769885},{"path":"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/vue-loader/lib/index.js","mtime":1606987774990}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/CARWASH_PROJECT/CARWASH_FRONTEND/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport VueClipboard from \"vue-clipboard2\";\nimport BaseHeader from \"@/components/BaseHeader\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport DeviceInfo from \"./DeviceInfo\";\nimport { SERVER_PARAMS } from \"../environment/environment\";\nVue.use(VueClipboard);\nexport default {\n  name: \"icons\",\n  components: {\n    BaseHeader: BaseHeader,\n    DeviceInfo: DeviceInfo\n  },\n  data: function data() {\n    return {\n      deviceList: [],\n      polling: null,\n      selectedDeviceId: null,\n      SERVER_URL: SERVER_PARAMS.URL\n    };\n  },\n  methods: {\n    getCurrentStates: function () {\n      var _getCurrentStates = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"\".concat(this.SERVER_URL, \"/getDeviceBySite?site=Rayong-1\")).then(function (response) {\n                  console.log(\"DEVICES lIST \", response);\n                  _this.deviceList = [];\n\n                  if (response.data.length > 0) {\n                    _this.deviceList = response.data;\n                  }\n                }).catch(function (e) {\n                  console.log(\"ERROR |\", e);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCurrentStates() {\n        return _getCurrentStates.apply(this, arguments);\n      }\n\n      return getCurrentStates;\n    }(),\n    onDeviceClicked: function onDeviceClicked(deviceId) {\n      console.log(\"Clicked at \", deviceId);\n\n      if (this.selectedDeviceId === deviceId) {\n        this.selectedDeviceId = null;\n      } else {\n        this.selectedDeviceId = deviceId;\n      }\n    },\n    onCopy: function onCopy() {\n      this.$notify({\n        type: \"info\",\n        message: \"Copied to clipboard\"\n      });\n    }\n  },\n  created: function created() {\n    this.getCurrentStates();\n  }\n};",{"version":3,"sources":["Devices.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,YAAA,MAAA,gBAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,UAAA;AACA,SAAA,aAAA;AACA,GAAA,CAAA,GAAA,CAAA,YAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,UAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,gBAAA,EAAA,IAHA;AAIA,MAAA,UAAA,EAAA,aAAA,CAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CACA,GADA,WACA,KAAA,UADA,qCAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,QAAA;AACA,kBAAA,KAAA,CAAA,UAAA,GAAA,EAAA;;AACA,sBAAA,QAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,oBAAA,KAAA,CAAA,UAAA,GAAA,QAAA,CAAA,IAAA;AACA;AACA,iBARA,EASA,KATA,CASA,UAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,CAAA;AACA,iBAXA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeA,IAAA,eAfA,2BAeA,QAfA,EAeA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,QAAA;;AACA,UAAA,KAAA,gBAAA,KAAA,QAAA,EAAA;AACA,aAAA,gBAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,gBAAA,GAAA,QAAA;AACA;AACA,KAtBA;AAuBA,IAAA,MAvBA,oBAuBA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AAFA,OAAA;AAIA;AA5BA,GAdA;AA4CA,EAAA,OA5CA,qBA4CA;AACA,SAAA,gBAAA;AACA;AA9CA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- BootstrapVue Done -->\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n      <b-row> </b-row>\n    </base-header>\n\n    <b-container fluid class=\"mt--7\">\n      <b-row class=\"justify-content-center\">\n        <b-col lg=\"12\">\n          <card header-classes=\"bg-transparent\">\n            <h3 slot=\"header\" class=\"mb-0\">Device list</h3>\n            <b-row class=\"icon-examples\">\n              <b-col\n                lg=\"3\"\n                md=\"6\"\n                v-for=\"device in deviceList\"\n                :key=\"device.deviceId\"\n              >\n                <button\n                  type=\"button\"\n                  class=\"btn-icon-clipboard\"\n                  title=\"\"\n                  @click=\"onDeviceClicked(device.deviceId)\"\n                  data-original-title=\"Copy to clipboard\"\n                >\n                  <div>\n                    <i class=\"fa fa-microchip\"></i>\n                    <span>{{ device.deviceId }}</span>\n                  </div>\n                </button>\n              </b-col>\n            </b-row>\n          </card>\n        </b-col>\n      </b-row>\n      <device-info\n        :deviceId=\"selectedDeviceId\"\n        :key=\"selectedDeviceId\"\n        v-if=\"selectedDeviceId != null\"\n      ></device-info>\n    </b-container>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport VueClipboard from \"vue-clipboard2\";\nimport BaseHeader from \"@/components/BaseHeader\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport DeviceInfo from \"./DeviceInfo\";\nimport { SERVER_PARAMS } from '../environment/environment';\nVue.use(VueClipboard);\nexport default {\n  name: \"icons\",\n  components: {\n    BaseHeader,\n    DeviceInfo,\n  },\n  data() {\n    return {\n      deviceList: [],\n      polling: null,\n      selectedDeviceId: null,\n      SERVER_URL: SERVER_PARAMS.URL,\n    };\n  },\n  methods: {\n    async getCurrentStates() {\n      await axios\n        .get(`${this.SERVER_URL}/getDeviceBySite?site=Rayong-1`)\n        .then((response) => {\n          console.log(\"DEVICES lIST \", response);\n          this.deviceList = [];\n          if (response.data.length > 0) {\n            this.deviceList = response.data;\n          }\n        })\n        .catch((e) => {\n          console.log(\"ERROR |\", e);\n        });\n    },\n    onDeviceClicked(deviceId) {\n      console.log(\"Clicked at \", deviceId);\n      if (this.selectedDeviceId === deviceId) {\n        this.selectedDeviceId = null;\n      } else {\n        this.selectedDeviceId = deviceId;\n      }\n    },\n    onCopy() {\n      this.$notify({\n        type: \"info\",\n        message: \"Copied to clipboard\",\n      });\n    },\n  },\n  created() {\n    this.getCurrentStates();\n  },\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/views"}]}