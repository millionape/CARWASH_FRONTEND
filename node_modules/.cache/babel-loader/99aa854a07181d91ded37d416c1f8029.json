{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\DeviceInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\DeviceInfo.vue","mtime":1607773770273},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Reah/Desktop/CARWASH_FRONTEND/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { SERVER_PARAMS } from \"../environment/environment\";\nexport default {\n  name: \"icons\",\n  props: {\n    deviceId: String\n  },\n  data: function data() {\n    return {\n      deviceMode: null,\n      deviceCurrentCredit: null,\n      deviceLastInsertCredit: null,\n      deviceLastInsertDate: null,\n      deviceUpdatedDate: null,\n      deviceList: [],\n      polling: null,\n      SERVER_URL: SERVER_PARAMS.URL,\n      columns: [{\n        label: \"Updated Date\",\n        field: \"updatedDate\"\n      }, {\n        label: \"Device Id\",\n        field: \"deviceId\"\n      }, {\n        label: \"Mode\",\n        field: \"onMode\"\n      }, {\n        label: \"Credit\",\n        field: \"currentCredit\"\n      }, {\n        label: \"Inserted Credit\",\n        field: \"insertedCredit\"\n      }],\n      rows: []\n    };\n  },\n  methods: {\n    getModeText: function getModeText(mode) {\n      //console.log(\"MODE---> \",mode)\n      if (mode === null) {\n        return \"\";\n      }\n\n      mode = Number(mode);\n\n      switch (mode) {\n        case 3:\n          return \"High Pressure Water\";\n\n        case 4:\n          return \"Vacuum Cleaner\";\n\n        case 5:\n          return \"Shampoo\";\n\n        case 6:\n          return \"Blower\";\n\n        case 7:\n          return \"Water\";\n\n        default:\n          return \"No mode selected\";\n      }\n    },\n    pollData: function pollData() {\n      var _this = this;\n\n      this.polling = setInterval(function () {\n        _this.getCurrentStates();\n      }, 2000);\n    },\n    getCurrentStates: function () {\n      var _getCurrentStates = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"\".concat(this.SERVER_URL, \"/getDeviceCurrentStatus?deviceId=\").concat(this.deviceId)).then(function (response) {\n                  console.log(\"DEVICES info \", response);\n                  var data = response.data[0];\n                  _this2.deviceMode = _this2.getModeText(data.onMode);\n                  console.log(\"MODE: \", _this2.deviceMode);\n                  _this2.deviceCurrentCredit = data.currentCredit;\n                  _this2.deviceLastInsertCredit = data.lastInsertCredit;\n                  _this2.deviceLastInsertDate = data.lastInsertDate;\n                  _this2.deviceUpdatedDate = data.updatedDate;\n                }).catch(function (e) {\n                  console.log(\"ERROR |\", e);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCurrentStates() {\n        return _getCurrentStates.apply(this, arguments);\n      }\n\n      return getCurrentStates;\n    }(),\n    getHistory: function () {\n      var _getHistory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(deviceId) {\n        var _this3 = this;\n\n        var loader, sdate, edate;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                loader = this.$loading.show({\n                  // Optional parameters\n                  color: \"blue\",\n                  canCancel: true\n                });\n                sdate = moment().subtract(7, \"days\").format(\"YYYY-MM-DD HH:mm:ss\");\n                edate = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n                _context2.next = 5;\n                return axios.get(\"\".concat(this.SERVER_URL, \"/getTransectionByDeviceId?deviceId=\").concat(deviceId, \"&sdate=\").concat(sdate, \"&edate=\").concat(edate, \"&limit=2000\")).then(function (response) {\n                  console.log(\"HISTORY lIST \", response);\n                  var history = response.data.map(function (x) {\n                    return {\n                      currentCredit: x.currentCredit,\n                      deviceId: x.deviceId,\n                      insertedCredit: x.insertedCredit,\n                      onMode: _this3.getModeText(x.onMode),\n                      updatedDate: x.updatedDate\n                    };\n                  });\n                  _this3.rows = history;\n                  loader.hide();\n                }).catch(function (e) {\n                  console.log(\"ERROR |\", e);\n                  loader.hide();\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getHistory(_x) {\n        return _getHistory.apply(this, arguments);\n      }\n\n      return getHistory;\n    }()\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.polling);\n  },\n  created: function created() {\n    this.getHistory(this.deviceId);\n    this.pollData();\n  }\n};",{"version":3,"sources":["DeviceInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"mt-3\">\r\n    <card header-classes=\"bg-transparent mt-3\">\r\n      <h3 class=\"mb-0\">Current state : [{{deviceId}}]</h3>\r\n      <b-row class=\"mt-3\">\r\n        <b-col xl=\"2\" class=\"mt-1\">\r\n          <stats-card\r\n            class=\"h-100\"\r\n            title=\"Current Credit\"\r\n            type=\"gradient-info\"\r\n            :sub-title=\"String(deviceCurrentCredit)\"\r\n          >\r\n          </stats-card>\r\n        </b-col>\r\n        <b-col xl=\"2\" class=\"mt-1\">\r\n          <stats-card\r\n            class=\"h-100\"\r\n            title=\"Current Mode\"\r\n            type=\"gradient-info\"\r\n            :sub-title=\"String(deviceMode)\"\r\n          >\r\n          </stats-card>\r\n        </b-col >\r\n        <b-col  xl=\"2\" class=\"mt-1\">\r\n          <stats-card\r\n            class=\"h-100\"\r\n            title=\"Last Inserted Credit\"\r\n            type=\"gradient-info\"\r\n            :sub-title=\"String(deviceLastInsertCredit)\"\r\n          >\r\n          </stats-card>\r\n        </b-col>\r\n        <b-col cols=\"12\" xl=\"3\" class=\"mt-1\">\r\n          <stats-card\r\n            class=\"h-100\"\r\n            title=\"Last Inserted Date\"\r\n            type=\"gradient-info\"\r\n            :sub-title=\"deviceLastInsertDate\"\r\n          >\r\n          </stats-card>\r\n        </b-col>\r\n        <b-col cols=\"12\" xl=\"3\" class=\"mt-1\">\r\n          <stats-card\r\n            class=\"h-100\"\r\n            title=\"Last Update\"\r\n            type=\"gradient-info\"\r\n            :sub-title=\"deviceUpdatedDate\"\r\n          >\r\n          </stats-card>\r\n        </b-col>\r\n      </b-row>\r\n    </card>\r\n    <br />\r\n    <card header-classes=\"bg-transparent\">\r\n      <h3 slot=\"header\" class=\"mb-0\">Event List</h3>\r\n      <vue-good-table\r\n        :columns=\"columns\"\r\n        :rows=\"rows\"\r\n        :pagination-options=\"{\r\n          enabled: true,\r\n          mode: 'pages',\r\n          perPage: 10,\r\n          perPageDropdown: [50, 100, 300, 1000],\r\n        }\"\r\n      />\r\n    </card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Vue from \"vue\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { SERVER_PARAMS } from \"../environment/environment\";\r\n\r\nexport default {\r\n  name: \"icons\",\r\n  props: {\r\n    deviceId: String,\r\n  },\r\n  data() {\r\n    return {\r\n      deviceMode: null,\r\n      deviceCurrentCredit: null,\r\n      deviceLastInsertCredit: null,\r\n      deviceLastInsertDate: null,\r\n      deviceUpdatedDate: null,\r\n      deviceList: [],\r\n      polling: null,\r\n      SERVER_URL: SERVER_PARAMS.URL,\r\n      columns: [\r\n        {\r\n          label: \"Updated Date\",\r\n          field: \"updatedDate\",\r\n        },\r\n        {\r\n          label: \"Device Id\",\r\n          field: \"deviceId\",\r\n        },\r\n        {\r\n          label: \"Mode\",\r\n          field: \"onMode\",\r\n        },\r\n        {\r\n          label: \"Credit\",\r\n          field: \"currentCredit\",\r\n        },\r\n        {\r\n          label: \"Inserted Credit\",\r\n          field: \"insertedCredit\",\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n  },\r\n  methods: {\r\n  getModeText(mode){\r\n    //console.log(\"MODE---> \",mode)\r\n    if(mode === null){\r\n      return \"\";\r\n    }\r\n    mode = Number(mode);\r\n    switch(mode){\r\n      case 3:\r\n        return \"High Pressure Water\";\r\n      case 4:\r\n        return \"Vacuum Cleaner\";\r\n      case 5:\r\n        return \"Shampoo\";\r\n      case 6:\r\n        return \"Blower\";\r\n      case 7:\r\n        return \"Water\";\r\n      default:\r\n        return \"No mode selected\"\r\n    }\r\n  },\r\n    pollData() {\r\n      this.polling = setInterval(() => {\r\n        this.getCurrentStates();\r\n      }, 2000);\r\n    },\r\n    async getCurrentStates() {\r\n      await axios\r\n        .get(`${this.SERVER_URL}/getDeviceCurrentStatus?deviceId=${this.deviceId}`)\r\n        .then((response) => {\r\n          console.log(\"DEVICES info \", response);\r\n          let data = response.data[0];\r\n          this.deviceMode = this.getModeText(data.onMode);\r\n          console.log(\"MODE: \",this.deviceMode);\r\n          this.deviceCurrentCredit = data.currentCredit;\r\n          this.deviceLastInsertCredit = data.lastInsertCredit;\r\n          this.deviceLastInsertDate = data.lastInsertDate;\r\n          this.deviceUpdatedDate = data.updatedDate;\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    async getHistory(deviceId) {\r\n      let loader = this.$loading.show({\r\n        // Optional parameters\r\n        color: \"blue\",\r\n        canCancel: true,\r\n      });\r\n      var sdate = moment()\r\n        .subtract(7, \"days\")\r\n        .format(\"YYYY-MM-DD HH:mm:ss\");\r\n      var edate = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n      await axios\r\n        .get(\r\n          `${this.SERVER_URL}/getTransectionByDeviceId?deviceId=${deviceId}&sdate=${sdate}&edate=${edate}&limit=2000`\r\n        )\r\n        .then((response) => {\r\n          console.log(\"HISTORY lIST \", response);\r\n          let history = response.data.map(x => {\r\n            return {\r\n              currentCredit: x.currentCredit,\r\n              deviceId: x.deviceId,\r\n              insertedCredit: x.insertedCredit,\r\n              onMode: this.getModeText(x.onMode),\r\n              updatedDate: x.updatedDate\r\n            }\r\n          })\r\n          this.rows = history;\r\n          loader.hide();\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n          loader.hide();\r\n        });\r\n    },\r\n  },\r\n   beforeDestroy() {\r\n    clearInterval(this.polling);\r\n  },\r\n  \r\n  created() {\r\n    this.getHistory(this.deviceId);\r\n    this.pollData();\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/views"}]}