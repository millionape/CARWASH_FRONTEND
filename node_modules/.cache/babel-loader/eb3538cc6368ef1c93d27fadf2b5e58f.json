{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Dashboard\\PageVisitsTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Dashboard\\PageVisitsTable.vue","mtime":1607772359693},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Reah/Desktop/CARWASH_FRONTEND/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"C:/Users/Reah/Desktop/CARWASH_FRONTEND/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _DropdownMenu2 from \"element-ui/lib/theme-chalk/dropdown-menu.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownMenu from \"element-ui/lib/dropdown-menu\";\nimport _DropdownItem2 from \"element-ui/lib/theme-chalk/dropdown-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownItem from \"element-ui/lib/dropdown-item\";\nimport _Dropdown2 from \"element-ui/lib/theme-chalk/dropdown.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dropdown from \"element-ui/lib/dropdown\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport \"core-js/modules/es6.function.name\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\n\nvar _components;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { SERVER_PARAMS } from \"../../environment/environment\";\nexport default _defineProperty({\n  name: \"page-visits-table\",\n  components: (_components = {}, _defineProperty(_components, _Table.name, _Table), _defineProperty(_components, _TableColumn.name, _TableColumn), _defineProperty(_components, _Dropdown.name, _Dropdown), _defineProperty(_components, _DropdownItem.name, _DropdownItem), _defineProperty(_components, _DropdownMenu.name, _DropdownMenu), _components),\n  data: function data() {\n    return {\n      polling: null,\n      SERVER_URL: SERVER_PARAMS.URL,\n      tableData: [{\n        page: \"/argon/\",\n        visitors: \"4,569\",\n        unique: \"340\",\n        bounceRate: \"46,53%\"\n      }, {\n        page: \"/argon/index.html\",\n        visitors: \"3,985\",\n        unique: \"319\",\n        bounceRate: \"46,53%\"\n      }, {\n        page: \"/argon/charts.html\",\n        visitors: \"3,513\",\n        unique: \"294\",\n        bounceRate: \"36,49%\"\n      }, {\n        page: \"/argon/tables.html\",\n        visitors: \"2,050\",\n        unique: \"147\",\n        bounceRate: \"50,87%\"\n      }, {\n        page: \"/argon/profile.html\",\n        visitors: \"1,795\",\n        unique: \"190\",\n        bounceRate: \"46,53%\"\n      }]\n    };\n  },\n  methods: {\n    getModeText: function getModeText(mode) {\n      //console.log(\"MODE---> \",mode)\n      if (mode === null) {\n        return \"\";\n      }\n\n      mode = Number(mode);\n\n      switch (mode) {\n        case 3:\n          return \"High Pressure Water\";\n\n        case 4:\n          return \"Vacuum Cleaner\";\n\n        case 5:\n          return \"Shampoo\";\n\n        case 6:\n          return \"Blower\";\n\n        case 7:\n          return \"Water\";\n\n        default:\n          return \"No mode selected\";\n      }\n    },\n    getCurrentStates: function () {\n      var _getCurrentStates = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"\".concat(this.SERVER_URL, \"/getDeviceBySite?site=Rayong-1\")).then(function (response) {\n                  console.log(\"DEVICES lIST \", response);\n                  _this.tableData = [];\n\n                  if (response.data.length > 0) {\n                    var states = response.data.map(function (x) {\n                      return {\n                        currentCredit: x.currentCredit,\n                        deviceId: x.deviceId,\n                        insertedCredit: x.insertedCredit,\n                        onMode: _this.getModeText(x.onMode),\n                        updatedDate: x.updatedDate,\n                        timeStamp: x.timeStamp\n                      };\n                    });\n                    _this.tableData = states;\n                  }\n                }).catch(function (e) {\n                  console.log(\"ERROR |\", e);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCurrentStates() {\n        return _getCurrentStates.apply(this, arguments);\n      }\n\n      return getCurrentStates;\n    }(),\n    pollData: function pollData() {\n      var _this2 = this;\n\n      this.polling = setInterval(function () {\n        _this2.getCurrentStates();\n      }, 2000);\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getCurrentStates();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.polling);\n  }\n}, \"created\", function created() {\n  this.pollData();\n});",{"version":3,"sources":["PageVisitsTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <b-card body-class=\"p-0\" header-class=\"border-0\">\r\n    <template v-slot:header>\r\n      <b-row align-v=\"center\">\r\n        <b-col>\r\n          <h3 class=\"mb-0\">Device current states</h3>\r\n        </b-col>\r\n        <!-- <b-col class=\"text-right\">\r\n          <a href=\"#!\" class=\"btn btn-sm btn-primary\">See all</a>\r\n        </b-col> -->\r\n      </b-row>\r\n    </template>\r\n\r\n    <el-table\r\n      class=\"table-responsive table\"\r\n      :data=\"tableData\"\r\n      header-row-class-name=\"thead-light\"\r\n    >\r\n      <el-table-column label=\"Device Id\" min-width=\"90px\" prop=\"deviceId\">\r\n        <template v-slot=\"{ row }\">\r\n          <div class=\"font-weight-600\">{{ row.deviceId }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"Updated Date\"\r\n        min-width=\"180px\"\r\n        prop=\"updatedDate\"\r\n      >\r\n      </el-table-column>\r\n      <el-table-column label=\"Selected Mode\" min-width=\"150px\" prop=\"onMode\">\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"Credit\" min-width=\"150px\" prop=\"currentCredit\">\r\n        <template v-slot=\"{ row }\">\r\n          {{ row.currentCredit }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"Last inserted credit\"\r\n        min-width=\"150px\"\r\n        prop=\"lastInsertCredit\"\r\n      >\r\n      </el-table-column>\r\n    </el-table>\r\n  </b-card>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { SERVER_PARAMS } from '../../environment/environment';\r\n\r\nimport {\r\n  Table,\r\n  TableColumn,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n} from \"element-ui\";\r\nexport default {\r\n  name: \"page-visits-table\",\r\n  components: {\r\n    [Table.name]: Table,\r\n    [TableColumn.name]: TableColumn,\r\n    [Dropdown.name]: Dropdown,\r\n    [DropdownItem.name]: DropdownItem,\r\n    [DropdownMenu.name]: DropdownMenu,\r\n  },\r\n  data() {\r\n    return {\r\n      polling: null,\r\n      SERVER_URL: SERVER_PARAMS.URL,\r\n      tableData: [\r\n        {\r\n          page: \"/argon/\",\r\n          visitors: \"4,569\",\r\n          unique: \"340\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n        {\r\n          page: \"/argon/index.html\",\r\n          visitors: \"3,985\",\r\n          unique: \"319\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n        {\r\n          page: \"/argon/charts.html\",\r\n          visitors: \"3,513\",\r\n          unique: \"294\",\r\n          bounceRate: \"36,49%\",\r\n        },\r\n        {\r\n          page: \"/argon/tables.html\",\r\n          visitors: \"2,050\",\r\n          unique: \"147\",\r\n          bounceRate: \"50,87%\",\r\n        },\r\n        {\r\n          page: \"/argon/profile.html\",\r\n          visitors: \"1,795\",\r\n          unique: \"190\",\r\n          bounceRate: \"46,53%\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    getModeText(mode){\r\n    //console.log(\"MODE---> \",mode)\r\n      if(mode === null){\r\n        return \"\";\r\n      }\r\n      mode = Number(mode);\r\n      switch(mode){\r\n        case 3:\r\n          return \"High Pressure Water\";\r\n        case 4:\r\n          return \"Vacuum Cleaner\";\r\n        case 5:\r\n          return \"Shampoo\";\r\n        case 6:\r\n          return \"Blower\";\r\n        case 7:\r\n          return \"Water\";\r\n        default:\r\n          return \"No mode selected\"\r\n      }\r\n    },\r\n    async getCurrentStates() {\r\n      await axios\r\n        .get(`${this.SERVER_URL}/getDeviceBySite?site=Rayong-1`)\r\n        .then((response) => {\r\n          console.log(\"DEVICES lIST \", response);\r\n          this.tableData = [];\r\n          if (response.data.length > 0) {\r\n            let states = response.data.map(x => {\r\n              return {\r\n                currentCredit: x.currentCredit,\r\n                deviceId: x.deviceId,\r\n                insertedCredit: x.insertedCredit,\r\n                onMode: this.getModeText(x.onMode),\r\n                updatedDate: x.updatedDate,\r\n                timeStamp: x.timeStamp\r\n              }\r\n            })\r\n            this.tableData = states;\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    pollData () {\r\n\t\tthis.polling = setInterval(() => {\r\n\t\t\tthis.getCurrentStates();\r\n\t\t}, 2000)\r\n\t}\r\n  },\r\n  async created() {\r\n    await this.getCurrentStates();\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.polling);\r\n  },\r\n  created() {\r\n    this.pollData();\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/views/Dashboard"}]}