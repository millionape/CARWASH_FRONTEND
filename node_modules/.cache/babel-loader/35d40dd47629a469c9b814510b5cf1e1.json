{"remainingRequest":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Devices.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\src\\views\\Devices.vue","mtime":1607773246799},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Reah\\Desktop\\CARWASH_FRONTEND\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Reah/Desktop/CARWASH_FRONTEND/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport VueClipboard from \"vue-clipboard2\";\nimport BaseHeader from \"@/components/BaseHeader\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport DeviceInfo from \"./DeviceInfo\";\nimport { SERVER_PARAMS } from \"../environment/environment\";\nVue.use(VueClipboard);\nexport default {\n  name: \"icons\",\n  components: {\n    BaseHeader: BaseHeader,\n    DeviceInfo: DeviceInfo\n  },\n  data: function data() {\n    return {\n      deviceList: [],\n      polling: null,\n      selectedDeviceId: null,\n      SERVER_URL: SERVER_PARAMS.URL\n    };\n  },\n  methods: {\n    getOnlineClass: function getOnlineClass(updatedDate) {\n      console.log(\"Updated date class \", updatedDate);\n      return \"color: red;\";\n    },\n    getCurrentStates: function () {\n      var _getCurrentStates = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"\".concat(this.SERVER_URL, \"/getDeviceBySite?site=Rayong-1\")).then(function (response) {\n                  console.log(\"DEVICES lIST \", response);\n                  _this.deviceList = [];\n\n                  if (response.data.length > 0) {\n                    _this.deviceList = response.data;\n                  }\n                }).catch(function (e) {\n                  console.log(\"ERROR |\", e);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCurrentStates() {\n        return _getCurrentStates.apply(this, arguments);\n      }\n\n      return getCurrentStates;\n    }(),\n    onDeviceClicked: function onDeviceClicked(deviceId) {\n      console.log(\"Clicked at \", deviceId);\n\n      if (this.selectedDeviceId === deviceId) {\n        this.selectedDeviceId = null;\n      } else {\n        this.selectedDeviceId = deviceId;\n      }\n    },\n    onCopy: function onCopy() {\n      this.$notify({\n        type: \"info\",\n        message: \"Copied to clipboard\"\n      });\n    }\n  },\n  created: function created() {\n    this.getCurrentStates();\n  }\n};",{"version":3,"sources":["Devices.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,YAAA,MAAA,gBAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,UAAA;AACA,SAAA,aAAA;AACA,GAAA,CAAA,GAAA,CAAA,YAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,UAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,gBAAA,EAAA,IAHA;AAIA,MAAA,UAAA,EAAA,aAAA,CAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,WADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,EAAA,WAAA;AACA,aAAA,aAAA;AACA,KAJA;AAKA,IAAA,gBALA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMA,KAAA,CACA,GADA,WACA,KAAA,UADA,qCAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,QAAA;AACA,kBAAA,KAAA,CAAA,UAAA,GAAA,EAAA;;AACA,sBAAA,QAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,oBAAA,KAAA,CAAA,UAAA,GAAA,QAAA,CAAA,IAAA;AACA;AACA,iBARA,EASA,KATA,CASA,UAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,CAAA;AACA,iBAXA,CANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBA,IAAA,eAnBA,2BAmBA,QAnBA,EAmBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,QAAA;;AACA,UAAA,KAAA,gBAAA,KAAA,QAAA,EAAA;AACA,aAAA,gBAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,gBAAA,GAAA,QAAA;AACA;AACA,KA1BA;AA2BA,IAAA,MA3BA,oBA2BA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AAFA,OAAA;AAIA;AAhCA,GAdA;AAgDA,EAAA,OAhDA,qBAgDA;AACA,SAAA,gBAAA;AACA;AAlDA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <!-- BootstrapVue Done -->\r\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\r\n      <!-- Card stats -->\r\n      <b-row> </b-row>\r\n    </base-header>\r\n\r\n    <b-container fluid class=\"mt--7\">\r\n      <b-row class=\"justify-content-center\">\r\n        <b-col lg=\"12\">\r\n          <card header-classes=\"bg-transparent\">\r\n            <h3 slot=\"header\" class=\"mb-0\">Device list</h3>\r\n            <b-row class=\"icon-examples\">\r\n              <b-col\r\n                lg=\"3\"\r\n                md=\"6\"\r\n                v-for=\"device in deviceList\"\r\n                :key=\"device.deviceId\"\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn-icon-clipboard\"\r\n                  title=\"\"\r\n                  @click=\"onDeviceClicked(device.deviceId)\"\r\n                  data-original-title=\"Copy to clipboard\"\r\n                >\r\n                  <div>\r\n                    <i class=\"fa fa-microchip\"></i>\r\n                    <span :style=\"getOnlineClass(device.updatedDate)\">{{ device.deviceId }}</span>\r\n                  </div>\r\n                  <div>\r\n                    <small>Last online: {{ device.updatedDate }}</small>\r\n                  </div>\r\n                </button>\r\n              </b-col>\r\n            </b-row>\r\n          </card>\r\n        </b-col>\r\n      </b-row>\r\n      <device-info\r\n        :deviceId=\"selectedDeviceId\"\r\n        :key=\"selectedDeviceId\"\r\n        v-if=\"selectedDeviceId != null\"\r\n      ></device-info>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Vue from \"vue\";\r\nimport VueClipboard from \"vue-clipboard2\";\r\nimport BaseHeader from \"@/components/BaseHeader\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport DeviceInfo from \"./DeviceInfo\";\r\nimport { SERVER_PARAMS } from '../environment/environment';\r\nVue.use(VueClipboard);\r\nexport default {\r\n  name: \"icons\",\r\n  components: {\r\n    BaseHeader,\r\n    DeviceInfo,\r\n  },\r\n  data() {\r\n    return {\r\n      deviceList: [],\r\n      polling: null,\r\n      selectedDeviceId: null,\r\n      SERVER_URL: SERVER_PARAMS.URL,\r\n    };\r\n  },\r\n  methods: {\r\n    getOnlineClass(updatedDate){\r\n    console.log(\"Updated date class \",updatedDate);\r\n      return \"color: red;\"\r\n    },\r\n    async getCurrentStates() {\r\n      await axios\r\n        .get(`${this.SERVER_URL}/getDeviceBySite?site=Rayong-1`)\r\n        .then((response) => {\r\n          console.log(\"DEVICES lIST \", response);\r\n          this.deviceList = [];\r\n          if (response.data.length > 0) {\r\n            this.deviceList = response.data;\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERROR |\", e);\r\n        });\r\n    },\r\n    onDeviceClicked(deviceId) {\r\n      console.log(\"Clicked at \", deviceId);\r\n      if (this.selectedDeviceId === deviceId) {\r\n        this.selectedDeviceId = null;\r\n      } else {\r\n        this.selectedDeviceId = deviceId;\r\n      }\r\n    },\r\n    onCopy() {\r\n      this.$notify({\r\n        type: \"info\",\r\n        message: \"Copied to clipboard\",\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    this.getCurrentStates();\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/views"}]}